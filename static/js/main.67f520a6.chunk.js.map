{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/CounterButton.js","components/Header.js","components/ErrorBoundry.js","containers/App.js","actions.js","constants.js","serviceWorker.js","reportWebVitals.js","reducer.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","console","log","map","user","i","components_Card","key","SearchBox","searchChange","aria-label","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","CounterButton","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateCount","setState","state","count","nextProps","nextState","color","onClick","Component","Header","components_CounterButton","ErrorBoundry","hasError","React","App","onRequestRobots","_this$props","searchField","onSearchChange","isPending","filteredRobots","filter","toLowerCase","includes","components_Header","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","connect","searchRobots","requestRobots","error","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateSeach","initialStateRobots","rootReducer","createLogger","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","src_containers_App","URL","process","href","origin","addEventListener","headers","Service-Worker","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.67f520a6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) => {\n   return (\n      <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n         <img alt= 'ph' src={`https://robohash.org/${id}?size=200x200`} />\n         <div>\n            <h2>{name}</h2>\n            <p>{email}</p>\n         </div>\n      </div>\n   )\n}\n\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n   console.log('CardList');\n   return (\n      <div>\n         {\n            robots.map((user, i )=> {\n               return (\n                  <Card\n                     key={i}\n                     id={robots[i].id}\n                     name={robots[i].name}\n                     email={robots[i].email}\n                  />)\n            })\n         }\n      </div>\n   )\n}\n\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox =({searchChange}) =>{\n   console.log('SearchBox');\n   return (\n      <div className=\"pa2\">\n         <input\n            aria-label=\"Search Robots\"\n            className=\"pa3 ba b--green bg-lightest-blue\"\n            type='text'\n            placeholder='Search robots'\n            onChange={searchChange}\n         />\n      </div>\n   )\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n   return(\n      <div style={{overflow: 'scroll', border:'5px solid black', height:'800px'}}>\n         {props.children}\n      </div>\n   )\n}\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass CounterButton extends Component {\n   constructor() {\n      super();\n      this.state = {\n         count: 0\n      }\n   }\n\n   shouldComponentUpdate(nextProps, nextState) {\n      if(this.state.count !== nextState.count){\n         return true\n      }\n      return false\n   }\n\n   updateCount =() => {\n      this.setState( state => {\n         return {count: this.state.count +1}\n      })\n   }\n\n   render() {\n      console.log('CounterButton');\n      return (\n         <button color={this.props.color} onClick={this.updateCount}>\n            count: {this.state.count}\n         </button>\n      )\n   }\n}\n\n\nexport default CounterButton;","import React, {Component} from 'react';\nimport CounterButton from './CounterButton';\n\nclass Header extends Component {\n   // shouldComponentUpdate(nextProps, nextState) {\n   //    return false;\n   // }\n\n   render() {\n      console.log('Header');\n      return (\n         <div>\n            <h1 className=\"f1\">Robot Friend</h1>\n            <CounterButton color= {'red'}/>\n         </div>\n      );\n      \n   }\n}\n\n\nexport default Header;","import React from 'react';\n\nclass ErrorBoundry extends React.Component {\n   \n   constructor(props) {\n      super(props);\n      this.state = {\n         hasError: false\n      }\n   }\n\n   componentDidCatch() {\n      this.setState({ hasError:true })\n   }\n\n   render() {\n      if(this.state.hasError) {\n         return <h1>Ooooppsss!</h1>\n      }\n      return this.props.children\n   }\n\n}\n\nexport default ErrorBoundry;","import React, { Component} from 'react';\nimport { connect } from 'react-redux'\nimport './App.css'\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport Header from '../components/Header';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nimport { requestRobots, setSearchField } from  '../actions'\n\nconst mapStateToProps = state => {\n   return {\n      searchField: state.searchRobots.searchField,\n      robots: state.requestRobots.robots,\n      isPending: state.requestRobots.isPending,\n      error: state.requestRobots.error\n   }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n   return {\n      onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n      onRequestRobots: () => dispatch(requestRobots())\n   }\n}\n\nclass App extends Component {\n   componentDidMount() {\n      this.props.onRequestRobots();\n   }\n   \n   render() {\n      const {searchField, onSearchChange,robots, isPending} = this.props;\n      const filteredRobots = robots.filter(robots => {\n         return robots.name.toLowerCase().includes(searchField.toLowerCase());\n      });\n      \n      return isPending ?\n         <h1>Loading</h1> :\n         (\n            <div className=\"tc\">\n               <Header />\n               <SearchBox searchChange={ onSearchChange }/>\n                <Scroll>\n                   <ErrorBoundry>\n                     <CardList robots= {filteredRobots}/>\n                   </ErrorBoundry>\n                </Scroll>\n            </div>\n         )\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {\n   CHANGE_SEARCH_FIELD,\n   REQUEST_ROBOTS_PENDING,\n   REQUEST_ROBOTS_SUCCESS,\n   REQUEST_ROBOTS_FAILED\n} from \"./constants\";\n\nexport const setSearchField = (text) => ({\n      type: CHANGE_SEARCH_FIELD,\n      payload: text\n})\n\nexport const requestRobots = () => (dispatch) => {\n   dispatch({ type: REQUEST_ROBOTS_PENDING });\n   fetch('https://jsonplaceholder.cypress.io/users')\n         .then(response => response.json())\n         .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n         .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n   CHANGE_SEARCH_FIELD,\n   REQUEST_ROBOTS_PENDING,\n   REQUEST_ROBOTS_SUCCESS,\n   REQUEST_ROBOTS_FAILED\n} from \"./constants\";\n\nconst initialStateSeach = {\n   searchField: ''\n}\n\nexport const searchRobots = (state =initialStateSeach, action={}) => {\n   switch (action.type) {\n      case CHANGE_SEARCH_FIELD:\n         return Object.assign({}, state, {searchField: action.payload});\n      default:\n         return state;\n   }\n}\n\nconst initialStateRobots = {\n   isPending: false,\n   robots: [],\n   error: ''\n};\n\nexport const requestRobots = (state =initialStateRobots, action ={}) => {\n   switch(action.type) {\n      case REQUEST_ROBOTS_PENDING:\n         return Object.assign({}, state, {isPending: true});\n      case REQUEST_ROBOTS_SUCCESS:\n         return Object.assign({}, state, {robots: action.payload, isPending: false});\n      case REQUEST_ROBOTS_FAILED:\n         return Object.assign({}, state, {error: action.payload, isPending: false});\n      default:\n         return state;\n   }\n}","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider, connect } from 'react-redux';\nimport { createStore, applyMiddleware,combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger'\nimport { searchRobots, requestRobots } from './reducer';\nimport thunkMiddleware from 'redux-thunk';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, requestRobots })\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n\n// serviceWorkerRegistration.register();\nserviceWorker.register();\n\n\nreportWebVitals();\n"],"sourceRoot":""}